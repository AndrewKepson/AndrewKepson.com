---
interface Props {
	title: string;
	description: string;
	canonical: string;
	ogImage: string;
	noIndex: boolean;
}

import { isProduction, siteUrl } from "@lib/store.js";

import Header from "@components/layouts/Header/Header.astro";
import Footer from "@components/layouts/Footer/Footer.astro";

// * Font Imports
// Roboto
import "@fontsource/roboto/100.css";
import "@fontsource/roboto/100-italic.css";
import "@fontsource/roboto/300.css";
import "@fontsource/roboto/300-italic.css";
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/400-italic.css";
import "@fontsource/roboto/500.css";
import "@fontsource/roboto/500-italic.css";
import "@fontsource/roboto/700.css";
import "@fontsource/roboto/700-italic.css";
import "@fontsource/roboto/900.css";
import "@fontsource/roboto/900-italic.css";

// Work Sans
import "@fontsource/work-sans/100.css";
import "@fontsource/work-sans/100-italic.css";
import "@fontsource/work-sans/200.css";
import "@fontsource/work-sans/200-italic.css";
import "@fontsource/work-sans/300.css";
import "@fontsource/work-sans/300-italic.css";
import "@fontsource/work-sans/400.css";
import "@fontsource/work-sans/400-italic.css";
import "@fontsource/work-sans/500.css";
import "@fontsource/work-sans/500-italic.css";
import "@fontsource/work-sans/600.css";
import "@fontsource/work-sans/600-italic.css";
import "@fontsource/work-sans/700.css";
import "@fontsource/work-sans/700-italic.css";
import "@fontsource/work-sans/800.css";
import "@fontsource/work-sans/800-italic.css";
import "@fontsource/work-sans/900.css";
import "@fontsource/work-sans/900-italic.css";

// EB Garamond
import "@fontsource/eb-garamond/400.css";
import "@fontsource/eb-garamond/500.css";
import "@fontsource/eb-garamond/600.css";
import "@fontsource/eb-garamond/700.css";

const { title, description, canonical, ogImage, noIndex } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<!-- Insert Google Tag Manager Here -->
		<!-- {isProduction && ( -->
		<!-- // Insert Tracking Scripts Here -->
		<!-- )} -->
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		{ogImage && <meta property="og:image" content={`${siteUrl}/${ogImage}`} />}
		<meta name="twitter:card" content="summary" />
		<meta name="twitter:creator" content={`${siteUrl}`} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
		<link rel="sitemap" href="/sitemap-index.xml" />
		{canonical && <link rel="canonical" href={`${siteUrl}${canonical}`} />}
		{noIndex && <meta name="robots" content="noindex" />}
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="m-auto max-w-full">
		<!-- Insert Google Tag Manager Here -->
		<div class="m-0 h-screen w-full overflow-x-hidden bg-white p-0">
			<Header />
			<div class="flex min-h-full flex-col px-4 text-gray-500 lg:px-16 lg:py-6">
				<div id="page-fade-wrapper">
					<main>
						<slot />
					</main>
				</div>
			</div>
			<Footer />
		</div>
	</body>
	<!-- Flowbite Script -->
	<!-- <script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"></script> -->
</html>

<style is:global>
	@tailwind base;
	@tailwind components;
	@tailwind utilities;

	html {
		scroll-behavior: smooth;
	}
	body {
		overflow-x: hidden;
	}

	/* Locally Host Fonts. Folder path relative to /public */
	/* @font-face {
		font-family: "NexaText";
		src: url("/fonts/Roboto.otf");
		font-weight: normal;
		font-display: swap;
	} */

	#page-fade-wrapper {
		opacity: 0;
		transition: opacity 500ms ease-in-out;
	}

	#page-fade-wrapper.loaded {
		opacity: 1;
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const wrapper = document.getElementById("page-fade-wrapper");

		// Set a timeout to add the 'loaded' class
		setTimeout(() => {
			wrapper.classList.add("loaded");
		}, 50);
	});
</script>
